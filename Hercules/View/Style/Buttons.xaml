<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:db="clr-namespace:Hercules.DB">

    <Style x:Key="ArrowDownPathStyle" TargetType="Path">
        <Setter Property="Fill" Value="DimGray" />
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="Data" Value="M 0 6 L 4 10 L 8 6 Z"/>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19" />
                            <Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5" />
                            <ContentPresenter HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1" />
                            <Setter Property="Stroke" TargetName="arrow" Value="#222" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#FF526C7B" />
                            <Setter Property="StrokeThickness" TargetName="circle" Value="1.5" />
                            <Setter Property="Stroke" TargetName="arrow" Value="#FF003366" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RevisionChangeType" TargetType="Image">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ChangeType}" Value="{x:Static db:DocumentCommitType.Added}">
                <Setter Property="Source" Value="{StaticResource fugue-plus-small}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ChangeType}" Value="{x:Static db:DocumentCommitType.Deleted}">
                <Setter Property="Source" Value="{StaticResource fugue-minus-small}" />
            </DataTrigger>
        </Style.Triggers>
        <Style.Setters>
            <Setter Property="Source" Value="{StaticResource fugue-asterisk-small-yellow}" />
            <Setter Property="Stretch" Value="None" />
        </Style.Setters>
    </Style>

    <Style x:Key="RevisionStatus" TargetType="Image">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLoaded}" Value="True">
                <Setter Property="Source" Value="{StaticResource fugue-tick-circle}" />
                <Setter Property="ToolTip" Value="Available" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static db:RevisionStatus.Missing}">
                <Setter Property="Source" Value="{StaticResource fugue-exclamation-circle}" />
                <Setter Property="ToolTip" Value="Missing" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="{x:Static db:RevisionStatus.Deleted}">
                <Setter Property="Source" Value="{StaticResource fugue-cross-circle}" />
                <Setter Property="ToolTip" Value="Deleted" />
            </DataTrigger>
        </Style.Triggers>
        <Style.Setters>
            <Setter Property="Source" Value="{StaticResource fugue-hourglass}" />
            <Setter Property="Stretch" Value="None" />
            <Setter Property="ToolTip" Value="Loading" />
        </Style.Setters>
    </Style>

    <Style x:Key="Flat" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter
                            Margin="{TemplateBinding Control.Padding}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                            RecognizesAccessKey="True"
                            Content="{TemplateBinding ContentControl.Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Opacity" Value="0.85" />
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter Property="Control.Background" Value="{x:Null}" />
                <Setter Property="Control.BorderBrush" Value="{x:Null}" />
                <Setter Property="Control.FontWeight" Value="Bold" />
                <Setter Property="Control.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Control.Opacity" Value="1" />
                <Setter Property="Control.FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlatBorder" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <Style x:Key="ClearText" TargetType="{x:Type Button}" BasedOn="{StaticResource Flat}">
        <Setter Property="Margin" Value="0,4,4,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="13" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image
                        Stretch = "Uniform"
                        Source = "{StaticResource fugue-cross}">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="Control.IsMouseOver" Value="False">
                                        <Setter Property="Control.Opacity" Value="0.5" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OpenFile" TargetType="{x:Type Button}" BasedOn="{StaticResource Flat}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Width="16" Height="16" Stretch="Uniform" Source="{StaticResource fugue-folder-horizontal-open}" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="Control.IsMouseOver" Value="False">
                                        <Setter Property="Control.Opacity" Value="0.75" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GearButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Flat}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image Width="16" Height="16" Stretch="Uniform" Source="{StaticResource fugue-gear}" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="Control.IsMouseOver" Value="False">
                                        <Setter Property="Control.Opacity" Value="0.75" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuIcon" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.15" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BookmarkIcon" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.15" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Command.Text}" />
    </Style>

    <Style x:Key="SmallCheckBox" TargetType="{x:Type CheckBox}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Image Width="16" Height="16" Stretch="Uniform" Source="{StaticResource fugue-ui-check-box}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Image Width="16" Height="16" Stretch="Uniform" Source="{StaticResource fugue-ui-check-box-uncheck}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Chevron" TargetType="{x:Type CheckBox}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Image Width="16" Height="16" Stretch="Uniform" Source="{StaticResource fugue-chevron}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Image Width="16" Height="16" Stretch="Uniform" Source="{StaticResource fugue-chevron-expand}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ButtonCloseTemplate" TargetType="{x:Type Button}">
        <Border x:Name="grid" Width="30" Height="30" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="path">
                                <EasingColorKeyFrame KeyTime="0" Value="#FFD20F0F" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="grid">
                                <EasingPointKeyFrame KeyTime="0" Value="0,0" />
                                <EasingPointKeyFrame KeyTime="0:0:0.2" Value="0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:0.4" Value="0.5,0.5" />
                            </PointAnimationUsingKeyFrames>
                            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1" />
                            </DoubleAnimationUsingKeyFrames>-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="path" Data="M47.090483,0 L47.861311,0.092279216 48.555346,0.56756882 49.054148,1.1531141 49.319121,1.9721257 49.335257,2.6692395 49.259615,3.394932 49.102171,4.1161428 29.474972,24.176419 51.715533,45.942572 51.726069,46.694193 51.767187,47.412268 51.671389,48.182665 51.192927,48.874514 50.605108,49.370638 49.784891,49.631861 49.087713,49.644812 48.362372,49.565856 47.641894,49.405108 25.846825,27.884619 3.3247323,50.903666 2.1092821,50.89588 1.0638387,50.640601 0.34427655,50.097079&#xd;&#xa;0,49.087054 0.020984888,47.965998 0.23142737,46.863539 22.163389,24.24759 1.0641912,3.4142044 1.0775325,2.1988037 1.3375908,1.1545373 1.8843976,0.43746676 2.8959846,0.097812405 4.0169356,0.123924 5.1184165,0.33940595 25.759066,20.539776 45.621039,0.058373488 46.37261,0.044405136 z" Margin="10" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="2">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Path.RenderTransform>
                <Path.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF415A8B" Offset="0" />
                        <GradientStop Color="#FF1D428B" Offset="1" />
                        <GradientStop Color="#FF0FD2C4" Offset="0.53" />
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
        </Border>
    </ControlTemplate>
</ResourceDictionary>