<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:schema="clr-namespace:Hercules.Forms.Schema"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:elements="clr-namespace:Hercules.Forms.Elements"
                    xmlns:presentation="clr-namespace:Hercules.Forms.Presentation"
                    xmlns:global="clr-namespace:System.Globalization;assembly=System.Runtime">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Theme.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <ContextMenu x:Key="DefaultContextMenu" Background="White">
        <MenuItem
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            Command="ApplicationCommands.Copy" Header="Copy">
            <MenuItem.Icon>
                <Image Source="{StaticResource fugue-blue-document-copy}" Style="{StaticResource MenuIcon}" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            Command="ApplicationCommands.Cut" Header="Cut">
            <MenuItem.Icon>
                <Image Source="{StaticResource fugue-scissors}" Style="{StaticResource MenuIcon}" />
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
            Command="ApplicationCommands.Paste" Header="Paste">
            <MenuItem.Icon>
                <Image Source="{StaticResource fugue-clipboard-paste}" Style="{StaticResource MenuIcon}" />
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <Style TargetType="Border" x:Key="ElementBorder">
        <Setter Property="Background" Value="{StaticResource ElementPreviewBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                <Setter Property="Background" Value="{StaticResource ElementModifiedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementModifiedBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                <Setter Property="Background" Value="{StaticResource ElementInvalidBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementInvalidBorderBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ElementHoverBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Border" x:Key="FocusableElementBorder">
        <Setter Property="Background" Value="{StaticResource ElementPreviewBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ElementHoverBorderBrush}"/>
            </Trigger>
            <Trigger Property="presentation:VirtualRowItem.IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource ElementFocusedBackgroundBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                <Setter Property="Background" Value="{StaticResource ElementModifiedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementModifiedBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                <Setter Property="Background" Value="{StaticResource ElementInvalidBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementInvalidBorderBrush}" />
            </DataTrigger>
            <Trigger Property="presentation:VirtualRowItem.IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ElementFocusedBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBlock" x:Key="ElementText">
        <Setter Property="ContextMenu" Value="{StaticResource DefaultContextMenu}"/>
        <Setter Property="FontFamily" Value="{StaticResource ElementFont}" />
        <Setter Property="FontSize" Value="{StaticResource ElementFontSize}" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <Trigger Property="presentation:VirtualRowItem.IsSelected" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox" x:Key="BooleanElement" >
        <Setter Property="Background" Value="{StaticResource ElementFocusedBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                <Setter Property="Background" Value="{StaticResource ElementModifiedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementModifiedBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                <Setter Property="Background" Value="{StaticResource ElementInvalidBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementInvalidBorderBrush}" />
            </DataTrigger>
            <Trigger Property="presentation:VirtualRowItem.IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ElementFocusedBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="TextBox" x:Key="TextElement">
        <Setter Property="Background" Value="{StaticResource ElementPreviewBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource DefaultContextMenu}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                <Setter Property="Background" Value="{StaticResource ElementModifiedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementModifiedBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                <Setter Property="Background" Value="{StaticResource ElementInvalidBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementInvalidBorderBrush}" />
            </DataTrigger>
            <Trigger Property="presentation:VirtualRowItem.IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource ElementFocusedBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="telerik:RadDateTimePicker" x:Key="DateTimeElement">
        <Setter Property="Background" Value="{StaticResource ElementFocusedBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Culture" Value="{x:Static schema:DateTimeSchemaType.Culture}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                <Setter Property="Background" Value="{StaticResource ElementModifiedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementModifiedBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                <Setter Property="Background" Value="{StaticResource ElementInvalidBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementInvalidBorderBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="telerik:RadComboBox" x:Key="RadComboBoxElement">
        <Setter Property="Background" Value="{StaticResource ElementFocusedBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ElementBorderBrush}" />
        <Setter Property="IsTextSearchEnabled" Value="True"/>
        <Setter Property="IsTextSearchCaseSensitive" Value="False"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                <Setter Property="Background" Value="{StaticResource ElementModifiedBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementModifiedBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                <Setter Property="Background" Value="{StaticResource ElementInvalidBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ElementInvalidBorderBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DrawingBrush Viewport="0,0,0.25,0.5" TileMode="Tile" x:Key="TransparentBackgroundBrush">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <GeometryDrawing Brush="Gray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,50,50" />
                            <RectangleGeometry Rect="50,50,50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
</ResourceDictionary>