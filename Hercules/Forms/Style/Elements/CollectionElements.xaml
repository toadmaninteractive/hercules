<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:elements="clr-namespace:Hercules.Forms.Elements"
                    xmlns:presentation="clr-namespace:Hercules.Forms.Presentation"
                    xmlns:hc="clr-namespace:Hercules.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type elements:ListItem}" x:Key="ListItem">
        <Border
            Opacity="{Binding IsActive, Converter={StaticResource ActiveOpacityConverter}}"
            AllowDrop="True"
            Width="54"
            CornerRadius="4">
            <i:Interaction.Behaviors>
                <hc:DropTargetElementBehavior MaxHeight="25" />
            </i:Interaction.Behaviors>
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsDragged}" Value="True">
                            <Setter Property="Background" Value="Thistle" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsDragged}" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <StackPanel Orientation="Horizontal">
                <Border Width="20" Height="20">
                    <TextBlock Margin="0,4,0,0" HorizontalAlignment="Right" Text="{Binding Index, Converter={StaticResource PlusOneConverter}}" FontWeight="Regular" FontFamily="{StaticResource ElementHintFont}" FontSize="{StaticResource ElementHintFontSize}" />
                </Border>
                <Image
                        VerticalAlignment = "Top"
                        Cursor = "SizeAll"
                        Margin = "2,2,0,0"
                        Stretch = "None"
                        ToolTip = "Drag to move"
                        Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DockPanel}}">
                    <i:Interaction.Behaviors>
                        <hc:DragSourceBehavior Data="{Binding}" IsDragged="{Binding IsDragged}" />
                    </i:Interaction.Behaviors>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Setter Property="Source" Value="{StaticResource fugue-grid-small-dot}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource fugue-grid-small-dot-green}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                                    <Setter Property="Source" Value="{StaticResource fugue-grid-small-dot-red}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Button
                    Focusable="False"
                    Margin="-2,0,0,0"
                    Style="{StaticResource Flat}"
                    VerticalAlignment = "Top"
                    Cursor="Hand"
                    Command="{Binding RemoveCommand}">
                    <Image
                        Stretch = "None"
                        HorizontalAlignment = "Left"
                        VerticalAlignment = "Top"
                        Source = "{StaticResource fugue-cross-small}"
                        ToolTip = "Delete this item"  />
                </Button>
            </StackPanel>
        </Border>
    </DataTemplate>
    <DataTemplate DataType="{x:Type elements:Pair}" x:Key="Pair">
        <Button Opacity="{Binding IsActive, Converter={StaticResource ActiveOpacityConverter}}"
                Focusable="False"
                Style="{StaticResource Flat}"
                HorizontalAlignment="Left"
                VerticalAlignment = "Top"
                Command="{Binding RemoveCommand}">
            <Image
                Stretch = "None"
                Cursor="Hand"
                Margin = "0, 0, 2, 0"
                HorizontalAlignment = "Left"
                VerticalAlignment = "Top"
                Source = "{StaticResource fugue-cross-small}"
                ToolTip = "Delete this pair"  />
        </Button>
    </DataTemplate>
    <DataTemplate DataType="{x:Type elements:ListElement}" x:Key="AddElement">
        <Button 
            Style="{StaticResource Flat}"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Command="{Binding AddElementCommand}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" Margin="0,2,0,0">
                <Image
                    HorizontalAlignment = "Center"
                    Cursor = "Hand"
                    Stretch = "None"
                    Source = "{StaticResource fugue-plus-small}" />
                <TextBlock
                    Margin="0,1,0,0"
                    HorizontalAlignment="Left" 
                    FontSize="11.5" FontFamily="Arial"
                    FontWeight="Regular" FontStretch="UltraExpanded"
                    FontStyle="Normal" Foreground="Black"
                    Text = "Add item..."
                    Cursor="Hand" />
            </StackPanel>
        </Button>
    </DataTemplate>

    <DataTemplate DataType="{x:Type elements:Field}" x:Key="FieldElement">
        <Border
            Opacity="{Binding IsActive, Converter={StaticResource ActiveOpacityConverter}}"
            VerticalAlignment="Top"
            Margin = "4,3,4,0">
            <TextBlock
                   Focusable="True"
                   KeyboardNavigation.IsTabStop="False"
                   HorizontalAlignment = "Right"
                   VerticalAlignment = "Top"
                   FontFamily = "{StaticResource ElementFieldFont}"
                   FontSize="11.5"
                   FontStyle = "Normal"
                   FontWeight="Regular"
                   Text="{Binding Caption}"
                   ToolTipService.ShowDuration="120000">
                <TextBlock.ToolTip>
                    <StackPanel>
                        <TextBlock FontWeight="Bold" FontSize="14" Margin="0,0,0,3" Text="{Binding Name}" />
                        <TextBlock Text="{Binding Type.Name}" Foreground="DarkBlue" />
                        <Border BorderBrush="Silver" BorderThickness="0,1,0,0" Margin="0,4" Visibility="{Binding Type.Help, Converter={StaticResource NullToVisibilityConverter}}" />
                        <TextBlock Text="{Binding Type.Help}" Visibility="{Binding Type.Help, Converter={StaticResource NullToVisibilityConverter}}" />
                    </StackPanel>
                </TextBlock.ToolTip>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="#ff303030" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                                <Setter Property="Foreground" Value="Green" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                                <Setter Property="Foreground" Value="IndianRed" />
                            </DataTrigger>
                            <Trigger Property="presentation:VirtualRowItem.IsSelected" Value="True">
                                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type elements:SchemalessField}" x:Key="SchemalessFieldRemoveButton">
        <Button
            Focusable="False"
            Margin = "0,0,1,0"
            Padding="0,0,0,0"
            Style="{StaticResource Flat}"
            HorizontalAlignment="Left"
            VerticalAlignment = "Top"
            Command="{Binding RemoveCommand}">
            <Image
                Stretch = "None"
                HorizontalAlignment = "Left"
                VerticalAlignment = "Top"
                Source = "{StaticResource fugue-cross-small}"
                ToolTip="Custom field" />
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="ExpanderElement">
        <StackPanel Orientation="Horizontal" Opacity="{Binding IsActive, Converter={StaticResource ActiveOpacityConverter}}">
            <i:Interaction.Behaviors>
                <hc:DropTargetElementBehavior />
            </i:Interaction.Behaviors>
            <ToggleButton Margin="0,0,0,0" Style="{StaticResource ExpanderDownHeaderStyle}" Focusable="True" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay}"/>
            <TextBlock
                        Margin="0,2,0,0"
                        FontSize = "13"
                        FontFamily = "Consolas"
                        FontWeight = "SemiBold"
                        FontStretch = "Normal"
                        Focusable="False"
                        Text="{Binding Caption}">
                <TextBlock.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding ToggleCommand}" />
                </TextBlock.InputBindings>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="#ff303030" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                                <Setter Property="Foreground" Value="Green" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                                <Setter Property="Foreground" Value="IndianRed" />
                            </DataTrigger>
                            <Trigger Property="presentation:VirtualRowItem.IsSelected" Value="True">
                                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>
    </DataTemplate>
    
    <DataTemplate x:Key="CheckedExpanderElement">
        <StackPanel Orientation="Horizontal" Opacity="{Binding IsActive, Converter={StaticResource ActiveOpacityConverter}}">
            <ToggleButton Margin="0,-3,0,0" Style="{StaticResource ExpanderDownHeaderStyle}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay}"/>
            <CheckBox Margin="0,3,4,0"  IsChecked="{Binding EnabledField.DeepElement.Value, Mode=TwoWay}" />
            <TextBlock
                        Margin="0,2,0,0"
                        FontSize = "13"
                        FontFamily = "Consolas"
                        FontWeight = "SemiBold"
                        FontStretch = "Normal"
                        Focusable="False"
                        Text="{Binding Caption}">
                <TextBlock.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding ToggleCommand}" />
                </TextBlock.InputBindings>
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="#ff303030" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                                <Setter Property="Foreground" Value="Green" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsValid}" Value="False">
                                <Setter Property="Foreground" Value="IndianRed" />
                            </DataTrigger>
                            <Trigger Property="presentation:VirtualRowItem.IsSelected" Value="True">
                                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>